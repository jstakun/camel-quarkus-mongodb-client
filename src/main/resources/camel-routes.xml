<?xml version="1.0" encoding="UTF-8"?>
<routes id="DBClient" xmlns="http://camel.apache.org/schema/spring"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://camel.apache.org/schema/spring https://camel.apache.org/schema/spring/camel-spring-3.16.0.xsd">
    <route id="Put to cache">
        <from uri="direct:putToCache"/>
        <doTry>
        	<log loggingLevel="INFO" message="Inserting to collection ${header.cid} 1 document..."/>
        	<convertBodyTo type="java.lang.String"/>
        	<to uri="direct:insertRecord"/>
        	<log loggingLevel="INFO" message="Done"/>
        	<setBody>
            	<simple>{"count": 1}</simple>
        	</setBody>
        	<removeHeaders pattern="*"/>
        	<doCatch>
            	 <exception>java.lang.Exception</exception>
                 <to uri="direct:logError"/>
            </doCatch>
        </doTry>
    </route>
    <route id="Insert record to collection">
        <from uri="direct:insertRecord"/>
        <recipientList>
            <simple>mongodb:camelMongoClient?database={{quarkus.mongodb.database}}&amp;collection=${header.cid}&amp;operation=save</simple>
        </recipientList>
        <log loggingLevel="INFO" message="Inserted to collection ${header.cid} document with id ${header.CamelMongoOid}."/>
    </route>
    <route id="Get from cache">
        <from uri="direct:getFromCache"/>
        <doTry>
        	<validate>
            	<simple>${header.limit} range '1..{{batchLimit}}'</simple>
        	</validate>
        	<log loggingLevel="INFO" message="Get all from cache ${header.cid} with limit ${header.limit}"/>
        	<setHeader name="CamelMongoDbSortBy">
            	<!--  descending by _id -->
            	<constant>{"_id" : -1}</constant>
        	</setHeader>
        	<setHeader name="CamelMongoDbLimit">
            	<simple>${header.limit}</simple>
        	</setHeader>
        	<setHeader name="CamelMongoDbBatchSize">
            	<constant>{{batchLimit}}</constant>
        	</setHeader>
        	<recipientList>
            	<simple>mongodb:camelMongoClient?database={{quarkus.mongodb.database}}&amp;collection=${header.cid}&amp;operation=findAll</simple>
        	</recipientList>
        	<to uri="direct:processOutput"/>
	        <doCatch>
            	 <exception>java.lang.Exception</exception>
                 <to uri="direct:logError"/>
            </doCatch>
        </doTry>
    </route>
    <route id="Get by query from cache">
        <from uri="direct:getByQueryFromCache"/>
        <doTry>
        	<validate>
            	<simple>${header.limit} range '1..{{batchLimit}}'</simple>
        	</validate>
        	<setHeader name="CamelMongoDbSortBy">
            	<simple>{"_id" : -1}</simple>
        	</setHeader>
        	<setHeader name="CamelMongoDbLimit">
            	<simple>${header.limit}</simple>
        	</setHeader>
        	<setHeader name="CamelMongoDbCriteria">
            	<simple>{${body}}</simple>
        	</setHeader>
        	<log loggingLevel="INFO" message="Get from cache by ${body} with limit ${header.limit}"/>
        	<recipientList>
            	<simple>mongodb:camelMongoClient?database={{quarkus.mongodb.database}}&amp;collection=${header.cid}&amp;operation=findAll</simple>
        	</recipientList>
        	<to uri="direct:processOutput"/>
           <doCatch>
            	 <exception>java.lang.Exception</exception>
                 <to uri="direct:logError"/>
            </doCatch>
        </doTry> 	
    </route>
    <route id="Get db stats">
        <from uri="direct:getDbStats"/>
        <doTry>
        	<to uri="mongodb:camelMongoClient?database={{quarkus.mongodb.database}}&amp;operation=getDbStats"/>
        	<to uri="direct:processOutput"/>
    		<doCatch>
            	 <exception>java.lang.Exception</exception>
                 <to uri="direct:logError"/>
            </doCatch>
        </doTry>    
    </route>
    <route id="Delete from cache">
        <from uri="direct:deleteFromCache"/>
        <doTry>
        	<log loggingLevel="INFO" message="Delete from collection ${header.cid} objects matching ${header.property}: ${header.value}"/>
        	<setBody>
            	<simple>{"${header.property}" : "${header.value}"}</simple>
        	</setBody>
        	<recipientList>
            	<simple>mongodb:camelMongoClient?database={{quarkus.mongodb.database}}&amp;collection=${header.cid}&amp;operation=remove</simple>
        	</recipientList>
        	<setBody>
            	<simple>{"count": ${header.CamelMongoDbRecordsAffected}}</simple>
        	</setBody>
        	<removeHeaders pattern="*"/>
            <doCatch>
            	 <exception>java.lang.Exception</exception>
                 <to uri="direct:logError"/>
            </doCatch>
        </doTry>	
    </route>
    <route id="Log error">
        <from uri="direct:logError"/>
        <log logName="net.gmsworld.server.camel" loggingLevel="ERROR" message="Operation failed with exception: ${exception.stacktrace}"/>
        <setBody>
            <simple>{"error" : "Operation failed"}</simple>
        </setBody>
        <removeHeaders pattern="*"/>
        <setHeader name="CamelHttpResponseCode">
            <constant>500</constant>
        </setHeader>
    </route>
    <route id="Process output">
        <from uri="direct:processOutput"/>
        <marshal>
            <json id="json" library="Jackson"/>
        </marshal>
        <choice> 
        	<when>
            	<simple>${headers.accept-encoding} contains 'gzip'</simple>
				<marshal>
					<gzipDeflater id="gzip"/>
				</marshal>
				<setHeader name="content-encoding">
            		<constant>gzip</constant>
        		</setHeader>
        		<removeHeaders pattern="accept*"/>
        	</when>
			<otherwise> 
        		<removeHeaders pattern="*"/>
			</otherwise>
		</choice>
    </route>
</routes>
